// <auto-generated />
using System;
using ApiConcessionaria.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiConcessionaria.Infra.Data.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20230521185312_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiConcessionaria.Infra.Data.Entities.Cliente", b =>
                {
                    b.Property<Guid>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDCLIENTE");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAALTERACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATACRIACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NOME");

                    b.HasKey("IdCliente");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("ApiConcessionaria.Infra.Data.Entities.Opcional", b =>
                {
                    b.Property<int>("IdOpcional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDOPCIONAL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOpcional"));

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ITEM");

                    b.Property<Guid?>("PedidoIdPedido")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECO");

                    b.HasKey("IdOpcional");

                    b.HasIndex("PedidoIdPedido");

                    b.ToTable("OPCIONAL", (string)null);
                });

            modelBuilder.Entity("ApiConcessionaria.Infra.Data.Entities.Pedido", b =>
                {
                    b.Property<Guid>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDPEDIDO");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAALTERACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATACRIACAO");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdOpcional")
                        .HasColumnType("int");

                    b.Property<Guid>("IdVeiculo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("QUANTIDADE");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdCliente");

                    b.ToTable("PEDIDO", (string)null);
                });

            modelBuilder.Entity("ApiConcessionaria.Infra.Data.Entities.Veiculo", b =>
                {
                    b.Property<Guid>("IdVeiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDVEICULO");

                    b.Property<int>("AnoVeiculo")
                        .HasColumnType("int")
                        .HasColumnName("ANOVEICULO");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAALTERACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATACRIACAO");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("MARCA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NOME");

                    b.Property<Guid?>("PedidoIdPedido")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECO");

                    b.HasKey("IdVeiculo");

                    b.HasIndex("PedidoIdPedido");

                    b.ToTable("VEICULO", (string)null);
                });

            modelBuilder.Entity("ApiConcessionaria.Infra.Data.Entities.Opcional", b =>
                {
                    b.HasOne("ApiConcessionaria.Infra.Data.Entities.Pedido", null)
                        .WithMany("Opcionals")
                        .HasForeignKey("PedidoIdPedido");
                });

            modelBuilder.Entity("ApiConcessionaria.Infra.Data.Entities.Pedido", b =>
                {
                    b.HasOne("ApiConcessionaria.Infra.Data.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiConcessionaria.Infra.Data.Entities.Veiculo", b =>
                {
                    b.HasOne("ApiConcessionaria.Infra.Data.Entities.Pedido", null)
                        .WithMany("Veiculos")
                        .HasForeignKey("PedidoIdPedido");
                });

            modelBuilder.Entity("ApiConcessionaria.Infra.Data.Entities.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ApiConcessionaria.Infra.Data.Entities.Pedido", b =>
                {
                    b.Navigation("Opcionals");

                    b.Navigation("Veiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
